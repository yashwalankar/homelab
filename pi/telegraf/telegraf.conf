# Global tags - will be added to all metrics
[global_tags]
  host = "raspberry_pi"
  location = "home"


[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]

[[inputs.mem]]

[[inputs.system]]

[agent]
  interval = "60s"
  round_interval = true
  flush_interval = "60s"
  hostname = ""
  precision = "1s"




# Temperature sensors (Raspberry Pi specific)
[[inputs.file]]
  files = ["/sys/class/thermal/thermal_zone0/temp"]
  name_override = "cpu_temperature"
  data_format = "value"
  data_type = "integer"

# This processor runs after the inputs.file plugin and converts the value.
[[processors.starlark]]
  ## This ensures the processor only acts on the "cpu_temperature" measurement.
  namepass = ["cpu_temperature"]

  source = '''
def apply(metric):
  # Get the raw temperature value from the "value" field.
  raw_temp = float(metric.fields["value"])

  # Perform the conversion from millidegrees to Celsius.
  celsius_temp = raw_temp / 1000.0

  # Update the original field with the new value.
  metric.fields["value"] = celsius_temp
  
  return metric
'''

# InfluxDB v2 output configuration
[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB cluster nodes
  urls = ["$INFLUX_URL"]
  
  ## Token for authentication
  token = "$INFLUX_TOKEN"
  
  ## Organization is the name of the organization you wish to write to
  organization = "$INFLUX_ORG"
  
  ## Destination bucket to write into
  bucket = "$INFLUX_BUCKET"
